---
title: "Summative assessment L5 & L6"
author: "GUID"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Before starting lets check...

1. The `.csv` and the `.Rmd` file you have downloaded as the assignment zip folder are saved in the **same** folder on your computer and that folder is **not a zip folder**.

2. You have manually set this folder as your working directory.

3. Before submitting your `.Rmd` to moodle, replace the GUID in the file name `GUID_L5L6.Rmd` with your `GUID`. The final version should be something like: `1234567M_L5L6.Rmd`.

4. Replace `"GUID"` in `author: "GUID"` (line 3 of this Rmd file) with your `GUID`, so that the final version reads something like: `author: "1234567M"`.



## Instructions to the summative assessment

The code chunks will include `NULL` arguments. Your task is to replace the `NULL` with something that you think is the correct answer. This can either be a number (for example if you get a multiple choice task) or code. Similarly to last week, `NULL` can stand for more than one "item" - a number, a function, a pipe, etc.

In this assignment, there are 11 questions. Question 10 is worth 1 point. Question 11 is worth 3 points. All other questions are scored at 2 points each, adding up to a total of 22 points. 


Any questions about this assessment, please use the Teams.

Last hint: Do not change any of the variable names, or anything in the { }!!!

Please submit your solutions **1 hour before the next class begins (deadline: 2nd November at 5pm)**. 

<span style="font-size: 22px; font-weight: bold; color: hsl(24, 100%, 50%);">Good luck!</span>



## Summative Assignment

This assignment is all about tidying data. Here is an example of how data can look like when it was downloaded straight from an online experiment. In your summative assignments so far, you have encountered data on trait judgements from voices AFTER it had been tidied. `messy_data` shows you what the data looked like BEFORE it was all put into a tidy shape. Your task is to get the data into a tidier format.



### Question 1

1A. To tidy up the data, we will need functions that are part of `tidyverse`. Load the package `tidyverse` into your `library`.

1B. Read in the data from the file `messy_data.csv` and save it to your `Global Environment` under the name `messy_data`. `messy_data` should have 140880 observations and 6 variables.

```{r Q1}
# 1A
NULL

# 1B
messy_data <- NULL
```



Ooft! There is a lot going on here. Especially in the column `Filename`. Anyway, here is an overview of the columns on `messy_data`. For anyone who prefers to read this table in a more human way, see the Questions.html.



| column name   | description    |
|:--------------|:---------------------------------------------------------|
| Participant | Participant's ID (in the tidy homework data this is column `PP_ID`) |
| Experiment | Trait participants judged: 3600 = "Trustworthiness", 3608 = "Dominance", 3616 = "Attractiveness", 3624 = "Competence", 3632 = "Confidence", 3640 = "Likeability", 3648 = "Warmth", and 3656 = "Aggressiveness" (in the tidy homework data this is column `Trait`) |
| Trial | Numbers 1-60: Numbers between 1 and 30 refer to "Rating1"; 31 to 60 refer to "Rating2" (in the tidy homework data this is column `Rating`) |
|	Reaction | Participant's Reaction Time |
| Free Response | Participant's Trait judgements on a scale from 1 to 500 (in the tidy homework data this is column `Response`)|
| Filename | name of the file particpants listened to. The first 2 letter refer to `Condition` (RW, RS, AW, AS); the third letter refers to `Voice_Sex` (F, M); after the `_` there is the Speaker's ID listed (in the homework data this is column `Voice`)|

Let's see if we can tidy up this messy dataset.



### Question 2

Attend to column `Filename` - drop the ".mp3" part. Store the output as a new object called `tidy_data` in the `Global Environment`. `tidy_data` should have 140880 observations and 6 variables.

```{r Q2}
tidy_data <- NULL
```




### Question 3

Separate `Filename` into `Condition` and `Voice_ID`. Use the **first** `"_"` as a separator. After this step, `tidy_data` should have 140880 observations and 7 variables. *Hint: notice that some of the speakers have more than 1 underscore in their `Voice_ID`.

```{r Q3}
tidy_data <- NULL
```




### Quesion 4

Separate `Condition` into `Condition` and `Voice_Sex`. The first 2 letters refer to condition, the third letter to the sex of the speaker. After this step, `tidy_data` should have 140880 observations and 8 variables.

```{r Q4}
tidy_data <- NULL
```




### Quesion 5

`Free Response` has a `V:` before each numerical value which you want to drop. Rename the column to `Response` in the process. Make sure the data type of the new `Response` column is `double`. After this step, `tidy_data` should have 140880 observations and 8 variables. *Hint: notice `Free Reponse` has a space between Free and Response. R will not like this. Think about a workaround. `glimpse()` could provide a clue.

```{r Q5}
tidy_data <- NULL
```



Yay!!! Now we have managed to separate all the variables into their own columns. There are still a few more cell values we need to recode so that the data is easier to read.




### Question 6

The new column of `Voice_Sex` has values of "F" and "M". Recode them to read "Female" and "Male" respectively. There are several ways of how this can be achieved. Up to you which you prefer, as long as your output has a column called `Voice_Sex` with values "Female" for female speakers and "Male" for male speakers. After this step, `tidy_data` should have 140880 observations and 8 variables.

```{r Q6}
tidy_data <- NULL
```




### Question 7

Add a new column `Trait` to `tidy_data` that recodes the values in the column `Experiment` as follows:

* if `Experiment` = 3600, `Trait` should read "Trustworthiness",
* if `Experiment` = 3608, `Trait` should read "Dominance",
* if `Experiment` = 3616, `Trait` should read "Attractiveness",
* if `Experiment` = 3624, `Trait` should read "Competence",
* if `Experiment` = 3632, `Trait` should read "Confidence",
* if `Experiment` = 3640, `Trait` should read "Likeability",
* if `Experiment` = 3648, `Trait` should read "Warmth", and
* if `Experiment` = 3656, `Trait` should read "Aggressiveness"

There are several ways of how this can be achieved. In my opinion, a neater approach might look more elegant, however it's up to you which function you prefer to use. After this step, `tidy_data` should have 140880 observations and 9 variables.

```{r Q7}
tidy_data <- NULL
```




### Question 8

8A. Add a new column `Rating` to `tidy_data` that recodes the values in the column `Trial` as follows:

* if `Trial` is between 1 and 30, `Rating` should read "Rating1",
* if `Trial` is between 31 and 60, `Rating` should read "Rating2"

After this step, `tidy_data` should have 140880 observations and 10 variables.

```{r Q8A}
#8A
tidy_data <- NULL
```



8B. Select and rename the columns according to the output below (see Questions.html). Make sure they are in the same order and spelled exactly as shown. `Participant_ID`, `Response`, and `Reaction` should be data type `double`; every other variable should be data type `character`.

```{r Q8B}
#8B
tidy_data <- NULL
```



Well done for getting the messy data into a tidier format. 




### Question 9

I have now calculated the mean `Response` score per `Voice_Sex`, `Voice_ID` and `Trait` (object `trait_scores`). 


```{r}
trait_scores <- read_csv("trait_scores.csv")
```


As you can see, `trait_scores` is in wide format with each `Trait` in its own column. This is not tidy.

Rearrange `trait_scores` into long format, so that for each of the voices the 8 trait names are listed in one column (called `Trait`), and their corresponding mean scores in another (called `Average_Score`). Store the output in the `Global Environment` as a new object called `trait_scores_long`.  `trait_scores_long` should have 480 observations and 4 variables.


```{r Q9}
trait_scores_long <- NULL
```




### Question 10

List all distinct/ unique speakers from `tidy_data` (output from question 8) in one column (`Voice_ID`) and their corresponsing sex (`Voice_Sex`) in another. Store the output as `speakers` in your `Global Environment`. Make sure every speaker is only listed once. `speakers` should have 60 observations and 2 variables.

```{r Q10}
speakers <- NULL
```




### Question 11

Explain in your own words what the code below does. Comment on everything you think is important (e.g. functions, arguments, how many columns, etc.).

Note: Keep in mind that this is a fictional example and not supposed to run (you can also see that in the statement `eval=FALSE` within the curly brackets which means that R is skipping the evaluation of the code chunk). 


```{r Q11, eval=FALSE}
Rainbow_data <- read_csv("Rainbow.csv") %>% 
  select(Care, Bear, Colour, Symbol) %>% 
  unite(Name, Care, Bear, sep = " ", remove = TRUE, na.rm = TRUE)
```

Answer Q11:









## Finished

Congratulations!!! That's you done with this assignment. All you have to now is to knit the `.Rmd` file into a html (as final check to make sure all the code chunks are running) by clicking the knit button at the top, and then upload the R markdown file (.Rmd) to moodle.